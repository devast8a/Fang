## Builtins
struct u32 {}
struct bool {}
struct str {}
struct empty {}
fn infix_codegen()

fn infix+(left: u32, right: u32) -> u32
fn infix-(left: u32, right: u32) -> u32
fn infix%(left: u32, right: u32) -> u32

fn infix<(left: u32, right: u32) -> bool
fn infix<=(left: u32, right: u32) -> bool
fn infix==(left: u32, right: u32) -> bool

fn printf(s: str, d: u32) -> empty

fn calculate() -> u32 {
    val num: u32 = 0
    val sum: u32 = 0

    while (num < 1000) {
        if (num % 3 == 0) {
            sum = sum + num
        } else if (num % 5 == 0) {
            sum = sum + num
        }

        num = num + 1
    }

    return sum
}

fn main() -> u32 {
    val sum = calculate!()
    printf("%d\n", sum)
}