// Generated automatically by nearley, version 2.19.1
// http://github.com/Hardmath123/nearley
// Bypasses TS6133. Allow declared but unused functions.
// @ts-ignore
function id(d: any[]): any { return d[0]; }
declare var operator: any;
declare var string_double_quote: any;
declare var integer_bin: any;
declare var integer_dec: any;
declare var integer_hex: any;
declare var integer_oct: any;
declare var identifier: any;
declare var ws: any;
declare var comment: any;
declare var newline: any;
declare var comma: any;

    import lex from '../lexer';
    import * as p from '../post_processor';

    const lexer = lex as any;       // Subvert type system
    
interface NearleyToken {  value: any;
  [key: string]: any;
};

interface NearleyLexer {
  reset: (chunk: string, info: any) => void;
  next: () => NearleyToken | undefined;
  save: () => any;
  formatError: (token: NearleyToken) => string;
  has: (tokenType: string) => boolean;
};

interface NearleyRule {
  name: string;
  symbols: NearleySymbol[];
  postprocess?: (d: any[], loc?: number, reject?: {}) => any;
};

type NearleySymbol = string | { literal: any } | { test: (token: any) => boolean };

interface Grammar {
  Lexer: NearleyLexer | undefined;
  ParserRules: NearleyRule[];
  ParserStart: string;
};

const grammar: Grammar = {
  Lexer: lexer,
  ParserRules: [
    {"name": "main$ebnf$1", "symbols": ["NL"], "postprocess": id},
    {"name": "main$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "main$ebnf$2$subexpression$1$ebnf$1", "symbols": []},
    {"name": "main$ebnf$2$subexpression$1$ebnf$1$subexpression$1", "symbols": ["StmtSep", "Stmt"]},
    {"name": "main$ebnf$2$subexpression$1$ebnf$1", "symbols": ["main$ebnf$2$subexpression$1$ebnf$1", "main$ebnf$2$subexpression$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "main$ebnf$2$subexpression$1$ebnf$2", "symbols": ["NL"], "postprocess": id},
    {"name": "main$ebnf$2$subexpression$1$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "main$ebnf$2$subexpression$1", "symbols": ["Stmt", "main$ebnf$2$subexpression$1$ebnf$1", "main$ebnf$2$subexpression$1$ebnf$2"]},
    {"name": "main$ebnf$2", "symbols": ["main$ebnf$2$subexpression$1"], "postprocess": id},
    {"name": "main$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "main", "symbols": ["main$ebnf$1", "main$ebnf$2"], "postprocess": p.MainProcessor},
    {"name": "DeclClass$ebnf$1", "symbols": []},
    {"name": "DeclClass$ebnf$1", "symbols": ["DeclClass$ebnf$1", "DcImplement"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "DeclClass$ebnf$2", "symbols": ["DcGeneric"], "postprocess": id},
    {"name": "DeclClass$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "DeclClass$ebnf$3", "symbols": []},
    {"name": "DeclClass$ebnf$3", "symbols": ["DeclClass$ebnf$3", "DcAttribute"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "DeclClass$ebnf$4", "symbols": ["DcBody"], "postprocess": id},
    {"name": "DeclClass$ebnf$4", "symbols": [], "postprocess": () => null},
    {"name": "DeclClass", "symbols": ["DcKeyword", "DcName", "DeclClass$ebnf$1", "DeclClass$ebnf$2", "DeclClass$ebnf$3", "DeclClass$ebnf$4"], "postprocess": p.DeclClass},
    {"name": "DcKeyword", "symbols": [{"literal":"class"}, "__"]},
    {"name": "DcName", "symbols": ["Identifier"]},
    {"name": "DcImplement", "symbols": ["N__", {"literal":"impl"}, "__", "Type"]},
    {"name": "DcGeneric", "symbols": ["N__", "DeclGeneric"]},
    {"name": "DcAttribute", "symbols": ["N__", "Attribute"]},
    {"name": "DcBody$macrocall$2", "symbols": ["Stmt"]},
    {"name": "DcBody$macrocall$1$macrocall$2", "symbols": [{"literal":"{"}]},
    {"name": "DcBody$macrocall$1$macrocall$3$ebnf$1", "symbols": ["NL"], "postprocess": id},
    {"name": "DcBody$macrocall$1$macrocall$3$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "DcBody$macrocall$1$macrocall$3", "symbols": ["DcBody$macrocall$1$macrocall$3$ebnf$1"]},
    {"name": "DcBody$macrocall$1$macrocall$4", "symbols": ["DcBody$macrocall$2"]},
    {"name": "DcBody$macrocall$1$macrocall$5", "symbols": ["StmtSep"]},
    {"name": "DcBody$macrocall$1$macrocall$6", "symbols": [{"literal":"}"}]},
    {"name": "DcBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": []},
    {"name": "DcBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1", "symbols": ["DcBody$macrocall$1$macrocall$5", "DcBody$macrocall$1$macrocall$4"]},
    {"name": "DcBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": ["DcBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "DcBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "DcBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1", "symbols": ["DcBody$macrocall$1$macrocall$4", "DcBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "DcBody$macrocall$1$macrocall$3"]},
    {"name": "DcBody$macrocall$1$macrocall$1$ebnf$1", "symbols": ["DcBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "DcBody$macrocall$1$macrocall$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "DcBody$macrocall$1$macrocall$1", "symbols": ["DcBody$macrocall$1$macrocall$2", "DcBody$macrocall$1$macrocall$3", "DcBody$macrocall$1$macrocall$1$ebnf$1", "DcBody$macrocall$1$macrocall$6"], "postprocess": p.ListProcessor},
    {"name": "DcBody$macrocall$1", "symbols": ["DcBody$macrocall$1$macrocall$1"]},
    {"name": "DcBody", "symbols": ["N_", "DcBody$macrocall$1"]},
    {"name": "Stmt", "symbols": ["DeclClass"]},
    {"name": "DeclFunction$ebnf$1", "symbols": ["CompileTime"], "postprocess": id},
    {"name": "DeclFunction$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "DeclFunction$ebnf$2", "symbols": ["DfReturnType"], "postprocess": id},
    {"name": "DeclFunction$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "DeclFunction$ebnf$3", "symbols": ["DfGeneric"], "postprocess": id},
    {"name": "DeclFunction$ebnf$3", "symbols": [], "postprocess": () => null},
    {"name": "DeclFunction$ebnf$4", "symbols": []},
    {"name": "DeclFunction$ebnf$4", "symbols": ["DeclFunction$ebnf$4", "DfAttribute"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "DeclFunction$ebnf$5", "symbols": ["DfBody"], "postprocess": id},
    {"name": "DeclFunction$ebnf$5", "symbols": [], "postprocess": () => null},
    {"name": "DeclFunction", "symbols": ["DfKeyword", "DfName", "DeclFunction$ebnf$1", "DfParameters", "DeclFunction$ebnf$2", "DeclFunction$ebnf$3", "DeclFunction$ebnf$4", "DeclFunction$ebnf$5"], "postprocess": p.DeclFunction},
    {"name": "DfKeyword", "symbols": [{"literal":"fn"}, "__"]},
    {"name": "DfKeyword", "symbols": [{"literal":"op"}, "__"]},
    {"name": "DfName", "symbols": ["Identifier"]},
    {"name": "DfParameters$macrocall$2", "symbols": [{"literal":"("}]},
    {"name": "DfParameters$macrocall$3$ebnf$1", "symbols": ["NL"], "postprocess": id},
    {"name": "DfParameters$macrocall$3$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "DfParameters$macrocall$3", "symbols": ["DfParameters$macrocall$3$ebnf$1"]},
    {"name": "DfParameters$macrocall$4", "symbols": ["DeclParameter"]},
    {"name": "DfParameters$macrocall$5", "symbols": ["COMMA"]},
    {"name": "DfParameters$macrocall$6", "symbols": [{"literal":")"}]},
    {"name": "DfParameters$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": []},
    {"name": "DfParameters$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1", "symbols": ["DfParameters$macrocall$5", "DfParameters$macrocall$4"]},
    {"name": "DfParameters$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": ["DfParameters$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "DfParameters$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "DfParameters$macrocall$1$ebnf$1$subexpression$1", "symbols": ["DfParameters$macrocall$4", "DfParameters$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "DfParameters$macrocall$3"]},
    {"name": "DfParameters$macrocall$1$ebnf$1", "symbols": ["DfParameters$macrocall$1$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "DfParameters$macrocall$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "DfParameters$macrocall$1", "symbols": ["DfParameters$macrocall$2", "DfParameters$macrocall$3", "DfParameters$macrocall$1$ebnf$1", "DfParameters$macrocall$6"], "postprocess": p.ListProcessor},
    {"name": "DfParameters", "symbols": ["DfParameters$macrocall$1"]},
    {"name": "DfReturnType", "symbols": ["_", {"literal":":"}, "_", "Type"]},
    {"name": "DfGeneric", "symbols": ["N__", "DeclGeneric"]},
    {"name": "DfAttribute", "symbols": ["N__", "Attribute"]},
    {"name": "DfBody$macrocall$2", "symbols": ["Stmt"]},
    {"name": "DfBody$macrocall$1$macrocall$2", "symbols": [{"literal":"{"}]},
    {"name": "DfBody$macrocall$1$macrocall$3$ebnf$1", "symbols": ["NL"], "postprocess": id},
    {"name": "DfBody$macrocall$1$macrocall$3$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "DfBody$macrocall$1$macrocall$3", "symbols": ["DfBody$macrocall$1$macrocall$3$ebnf$1"]},
    {"name": "DfBody$macrocall$1$macrocall$4", "symbols": ["DfBody$macrocall$2"]},
    {"name": "DfBody$macrocall$1$macrocall$5", "symbols": ["StmtSep"]},
    {"name": "DfBody$macrocall$1$macrocall$6", "symbols": [{"literal":"}"}]},
    {"name": "DfBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": []},
    {"name": "DfBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1", "symbols": ["DfBody$macrocall$1$macrocall$5", "DfBody$macrocall$1$macrocall$4"]},
    {"name": "DfBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": ["DfBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "DfBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "DfBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1", "symbols": ["DfBody$macrocall$1$macrocall$4", "DfBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "DfBody$macrocall$1$macrocall$3"]},
    {"name": "DfBody$macrocall$1$macrocall$1$ebnf$1", "symbols": ["DfBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "DfBody$macrocall$1$macrocall$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "DfBody$macrocall$1$macrocall$1", "symbols": ["DfBody$macrocall$1$macrocall$2", "DfBody$macrocall$1$macrocall$3", "DfBody$macrocall$1$macrocall$1$ebnf$1", "DfBody$macrocall$1$macrocall$6"], "postprocess": p.ListProcessor},
    {"name": "DfBody$macrocall$1", "symbols": ["DfBody$macrocall$1$macrocall$1"]},
    {"name": "DfBody", "symbols": ["N_", "DfBody$macrocall$1"]},
    {"name": "Stmt", "symbols": ["DeclFunction"]},
    {"name": "DeclGeneric$ebnf$1", "symbols": []},
    {"name": "DeclGeneric$ebnf$1", "symbols": ["DeclGeneric$ebnf$1", "DgWhere"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "DeclGeneric", "symbols": ["DgKeyword", "DgParameters", "DeclGeneric$ebnf$1"]},
    {"name": "DgKeyword", "symbols": [{"literal":"generic"}]},
    {"name": "DgParameters$macrocall$2", "symbols": [{"literal":"<"}]},
    {"name": "DgParameters$macrocall$3", "symbols": ["_"]},
    {"name": "DgParameters$macrocall$4", "symbols": ["DgParameter"]},
    {"name": "DgParameters$macrocall$5", "symbols": ["COMMA"]},
    {"name": "DgParameters$macrocall$6", "symbols": [{"literal":">"}]},
    {"name": "DgParameters$macrocall$1$subexpression$1$ebnf$1", "symbols": []},
    {"name": "DgParameters$macrocall$1$subexpression$1$ebnf$1$subexpression$1", "symbols": ["DgParameters$macrocall$5", "DgParameters$macrocall$4"]},
    {"name": "DgParameters$macrocall$1$subexpression$1$ebnf$1", "symbols": ["DgParameters$macrocall$1$subexpression$1$ebnf$1", "DgParameters$macrocall$1$subexpression$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "DgParameters$macrocall$1$subexpression$1", "symbols": ["DgParameters$macrocall$4", "DgParameters$macrocall$1$subexpression$1$ebnf$1", "DgParameters$macrocall$3"]},
    {"name": "DgParameters$macrocall$1", "symbols": ["DgParameters$macrocall$2", "DgParameters$macrocall$3", "DgParameters$macrocall$1$subexpression$1", "DgParameters$macrocall$6"], "postprocess": p.ListProcessor},
    {"name": "DgParameters", "symbols": ["DgParameters$macrocall$1"]},
    {"name": "DgParameter", "symbols": ["Identifier"]},
    {"name": "DgWhere", "symbols": ["__", {"literal":"where"}, "__", "Identifier", "__", {"literal":"impl"}, "__", "Type"]},
    {"name": "DeclParameter$ebnf$1", "symbols": ["DpKeyword"], "postprocess": id},
    {"name": "DeclParameter$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "DeclParameter$ebnf$2", "symbols": ["CompileTime"], "postprocess": id},
    {"name": "DeclParameter$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "DeclParameter$ebnf$3", "symbols": ["DpType"], "postprocess": id},
    {"name": "DeclParameter$ebnf$3", "symbols": [], "postprocess": () => null},
    {"name": "DeclParameter$ebnf$4", "symbols": []},
    {"name": "DeclParameter$ebnf$4", "symbols": ["DeclParameter$ebnf$4", "DpAttribute"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "DeclParameter$ebnf$5", "symbols": ["DpValue"], "postprocess": id},
    {"name": "DeclParameter$ebnf$5", "symbols": [], "postprocess": () => null},
    {"name": "DeclParameter", "symbols": ["DeclParameter$ebnf$1", "DpName", "DeclParameter$ebnf$2", "DeclParameter$ebnf$3", "DeclParameter$ebnf$4", "DeclParameter$ebnf$5"], "postprocess": p.DeclParameter},
    {"name": "DpKeyword", "symbols": [{"literal":"own"}, "__"]},
    {"name": "DpKeyword", "symbols": [{"literal":"mut"}, "__"]},
    {"name": "DpName", "symbols": ["Identifier"]},
    {"name": "DpType", "symbols": ["_", {"literal":":"}, "_", "Type"]},
    {"name": "DpAttribute", "symbols": ["__", "Attribute"]},
    {"name": "DpValue", "symbols": ["_", {"literal":"="}, "_", "Expr"]},
    {"name": "DeclTrait$ebnf$1", "symbols": []},
    {"name": "DeclTrait$ebnf$1", "symbols": ["DeclTrait$ebnf$1", "DtImplement"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "DeclTrait$ebnf$2", "symbols": ["DtGeneric"], "postprocess": id},
    {"name": "DeclTrait$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "DeclTrait$ebnf$3", "symbols": []},
    {"name": "DeclTrait$ebnf$3", "symbols": ["DeclTrait$ebnf$3", "DtAttribute"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "DeclTrait$ebnf$4", "symbols": ["DtBody"], "postprocess": id},
    {"name": "DeclTrait$ebnf$4", "symbols": [], "postprocess": () => null},
    {"name": "DeclTrait", "symbols": ["DtKeyword", "DtName", "DeclTrait$ebnf$1", "DeclTrait$ebnf$2", "DeclTrait$ebnf$3", "DeclTrait$ebnf$4"], "postprocess": p.DeclTrait},
    {"name": "DtKeyword", "symbols": [{"literal":"trait"}, "__"]},
    {"name": "DtName", "symbols": ["Identifier"]},
    {"name": "DtImplement", "symbols": ["N__", {"literal":"impl"}, "__", "Type"]},
    {"name": "DtGeneric", "symbols": ["N__", "DeclGeneric"]},
    {"name": "DtAttribute", "symbols": ["N__", "Attribute"]},
    {"name": "DtBody$macrocall$2", "symbols": ["Stmt"]},
    {"name": "DtBody$macrocall$1$macrocall$2", "symbols": [{"literal":"{"}]},
    {"name": "DtBody$macrocall$1$macrocall$3$ebnf$1", "symbols": ["NL"], "postprocess": id},
    {"name": "DtBody$macrocall$1$macrocall$3$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "DtBody$macrocall$1$macrocall$3", "symbols": ["DtBody$macrocall$1$macrocall$3$ebnf$1"]},
    {"name": "DtBody$macrocall$1$macrocall$4", "symbols": ["DtBody$macrocall$2"]},
    {"name": "DtBody$macrocall$1$macrocall$5", "symbols": ["StmtSep"]},
    {"name": "DtBody$macrocall$1$macrocall$6", "symbols": [{"literal":"}"}]},
    {"name": "DtBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": []},
    {"name": "DtBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1", "symbols": ["DtBody$macrocall$1$macrocall$5", "DtBody$macrocall$1$macrocall$4"]},
    {"name": "DtBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": ["DtBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "DtBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "DtBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1", "symbols": ["DtBody$macrocall$1$macrocall$4", "DtBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "DtBody$macrocall$1$macrocall$3"]},
    {"name": "DtBody$macrocall$1$macrocall$1$ebnf$1", "symbols": ["DtBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "DtBody$macrocall$1$macrocall$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "DtBody$macrocall$1$macrocall$1", "symbols": ["DtBody$macrocall$1$macrocall$2", "DtBody$macrocall$1$macrocall$3", "DtBody$macrocall$1$macrocall$1$ebnf$1", "DtBody$macrocall$1$macrocall$6"], "postprocess": p.ListProcessor},
    {"name": "DtBody$macrocall$1", "symbols": ["DtBody$macrocall$1$macrocall$1"]},
    {"name": "DtBody", "symbols": ["N_", "DtBody$macrocall$1"]},
    {"name": "Stmt", "symbols": ["DeclTrait"]},
    {"name": "DeclVariable$ebnf$1", "symbols": ["CompileTime"], "postprocess": id},
    {"name": "DeclVariable$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "DeclVariable$ebnf$2", "symbols": ["DvType"], "postprocess": id},
    {"name": "DeclVariable$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "DeclVariable$ebnf$3", "symbols": []},
    {"name": "DeclVariable$ebnf$3", "symbols": ["DeclVariable$ebnf$3", "DvAttribute"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "DeclVariable$ebnf$4", "symbols": ["DvValue"], "postprocess": id},
    {"name": "DeclVariable$ebnf$4", "symbols": [], "postprocess": () => null},
    {"name": "DeclVariable", "symbols": ["DvKeyword", "DvName", "DeclVariable$ebnf$1", "DeclVariable$ebnf$2", "DeclVariable$ebnf$3", "DeclVariable$ebnf$4"], "postprocess": p.DeclVariable},
    {"name": "DvKeyword", "symbols": [{"literal":"val"}, "__"]},
    {"name": "DvKeyword", "symbols": [{"literal":"mut"}, "__"]},
    {"name": "DvName", "symbols": ["Identifier"]},
    {"name": "DvType", "symbols": ["_", {"literal":":"}, "_", "Type"]},
    {"name": "DvAttribute", "symbols": ["__", "Attribute"]},
    {"name": "DvValue", "symbols": ["_", {"literal":"="}, "_", "Expr"]},
    {"name": "Stmt", "symbols": ["DeclVariable"]},
    {"name": "Expr", "symbols": ["ExprBinary"]},
    {"name": "OperatorSpaced$ebnf$1", "symbols": [(lexer.has("operator") ? {type: "operator"} : operator)], "postprocess": id},
    {"name": "OperatorSpaced$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "OperatorSpaced", "symbols": [{"literal":"<"}, "OperatorSpaced$ebnf$1"]},
    {"name": "OperatorSpaced$ebnf$2", "symbols": [(lexer.has("operator") ? {type: "operator"} : operator)], "postprocess": id},
    {"name": "OperatorSpaced$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "OperatorSpaced", "symbols": [{"literal":">"}, "OperatorSpaced$ebnf$2"]},
    {"name": "OperatorSpaced", "symbols": [(lexer.has("operator") ? {type: "operator"} : operator)], "postprocess": p.RejectOperators},
    {"name": "Operator", "symbols": [(lexer.has("operator") ? {type: "operator"} : operator)], "postprocess": p.RejectOperators},
    {"name": "ExprBinary", "symbols": ["ExprUnary", "__", "OperatorSpaced", "__", "ExprBinary"], "postprocess": p.ExprBinary},
    {"name": "ExprBinary", "symbols": ["ExprUnary", "NL", "OperatorSpaced", "__", "ExprBinary"], "postprocess": p.ExprBinary},
    {"name": "ExprBinary", "symbols": ["ExprUnary", "__", "OperatorSpaced", "NL", "ExprBinary"], "postprocess": p.ExprBinary},
    {"name": "ExprBinary", "symbols": ["Atom", "Operator", "Atom"], "postprocess": p.ExprBinary},
    {"name": "ExprBinary", "symbols": ["ExprUnary"]},
    {"name": "ExprUnary", "symbols": ["Operator", "Atom"], "postprocess": p.ExprUnaryPrefix},
    {"name": "ExprUnary", "symbols": ["Atom", "Operator"], "postprocess": p.ExprUnaryPostfix},
    {"name": "ExprUnary", "symbols": ["Atom"]},
    {"name": "Atom", "symbols": [{"literal":"("}, "_", "Expr", "_", {"literal":")"}]},
    {"name": "Atom", "symbols": ["Identifier"], "postprocess": p.ExprIdentifier},
    {"name": "Atom", "symbols": [(lexer.has("string_double_quote") ? {type: "string_double_quote"} : string_double_quote)], "postprocess": p.LiteralString},
    {"name": "Atom", "symbols": [(lexer.has("integer_bin") ? {type: "integer_bin"} : integer_bin)], "postprocess": p.LiteralIntegerBin},
    {"name": "Atom", "symbols": [(lexer.has("integer_dec") ? {type: "integer_dec"} : integer_dec)], "postprocess": p.LiteralIntegerDec},
    {"name": "Atom", "symbols": [(lexer.has("integer_hex") ? {type: "integer_hex"} : integer_hex)], "postprocess": p.LiteralIntegerHex},
    {"name": "Atom", "symbols": [(lexer.has("integer_oct") ? {type: "integer_oct"} : integer_oct)], "postprocess": p.LiteralIntegerOct},
    {"name": "ExprList$macrocall$2", "symbols": [{"literal":"["}]},
    {"name": "ExprList$macrocall$3", "symbols": ["_"]},
    {"name": "ExprList$macrocall$4", "symbols": ["Expr"]},
    {"name": "ExprList$macrocall$5", "symbols": ["COMMA"]},
    {"name": "ExprList$macrocall$6", "symbols": [{"literal":"]"}]},
    {"name": "ExprList$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": []},
    {"name": "ExprList$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1", "symbols": ["ExprList$macrocall$5", "ExprList$macrocall$4"]},
    {"name": "ExprList$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": ["ExprList$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "ExprList$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "ExprList$macrocall$1$ebnf$1$subexpression$1", "symbols": ["ExprList$macrocall$4", "ExprList$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "ExprList$macrocall$3"]},
    {"name": "ExprList$macrocall$1$ebnf$1", "symbols": ["ExprList$macrocall$1$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "ExprList$macrocall$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "ExprList$macrocall$1", "symbols": ["ExprList$macrocall$2", "ExprList$macrocall$3", "ExprList$macrocall$1$ebnf$1", "ExprList$macrocall$6"], "postprocess": p.ListProcessor},
    {"name": "ExprList", "symbols": ["ExprList$macrocall$1"]},
    {"name": "Atom", "symbols": ["ExprList"]},
    {"name": "ExprDictionary$macrocall$2", "symbols": [{"literal":"{"}]},
    {"name": "ExprDictionary$macrocall$3", "symbols": ["_"]},
    {"name": "ExprDictionary$macrocall$4", "symbols": ["LdEntry"]},
    {"name": "ExprDictionary$macrocall$5", "symbols": ["COMMA"]},
    {"name": "ExprDictionary$macrocall$6", "symbols": [{"literal":"}"}]},
    {"name": "ExprDictionary$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": []},
    {"name": "ExprDictionary$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1", "symbols": ["ExprDictionary$macrocall$5", "ExprDictionary$macrocall$4"]},
    {"name": "ExprDictionary$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": ["ExprDictionary$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "ExprDictionary$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "ExprDictionary$macrocall$1$ebnf$1$subexpression$1", "symbols": ["ExprDictionary$macrocall$4", "ExprDictionary$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "ExprDictionary$macrocall$3"]},
    {"name": "ExprDictionary$macrocall$1$ebnf$1", "symbols": ["ExprDictionary$macrocall$1$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "ExprDictionary$macrocall$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "ExprDictionary$macrocall$1", "symbols": ["ExprDictionary$macrocall$2", "ExprDictionary$macrocall$3", "ExprDictionary$macrocall$1$ebnf$1", "ExprDictionary$macrocall$6"], "postprocess": p.ListProcessor},
    {"name": "ExprDictionary", "symbols": ["ExprDictionary$macrocall$1"]},
    {"name": "LdEntry", "symbols": ["Identifier", "_", {"literal":":"}, "_", "Expr"]},
    {"name": "Atom", "symbols": ["ExprDictionary"]},
    {"name": "ExprCall$ebnf$1", "symbols": ["CompileTime"], "postprocess": id},
    {"name": "ExprCall$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "ExprCall", "symbols": ["EcTarget", "ExprCall$ebnf$1", "EcArguments"], "postprocess": p.ExprCall},
    {"name": "EcTarget", "symbols": ["Atom"]},
    {"name": "EcArguments$macrocall$2", "symbols": [{"literal":"("}]},
    {"name": "EcArguments$macrocall$3", "symbols": ["_"]},
    {"name": "EcArguments$macrocall$4", "symbols": ["EcArgument"]},
    {"name": "EcArguments$macrocall$5", "symbols": ["COMMA"]},
    {"name": "EcArguments$macrocall$6", "symbols": [{"literal":")"}]},
    {"name": "EcArguments$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": []},
    {"name": "EcArguments$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1", "symbols": ["EcArguments$macrocall$5", "EcArguments$macrocall$4"]},
    {"name": "EcArguments$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": ["EcArguments$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "EcArguments$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "EcArguments$macrocall$1$ebnf$1$subexpression$1", "symbols": ["EcArguments$macrocall$4", "EcArguments$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "EcArguments$macrocall$3"]},
    {"name": "EcArguments$macrocall$1$ebnf$1", "symbols": ["EcArguments$macrocall$1$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "EcArguments$macrocall$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "EcArguments$macrocall$1", "symbols": ["EcArguments$macrocall$2", "EcArguments$macrocall$3", "EcArguments$macrocall$1$ebnf$1", "EcArguments$macrocall$6"], "postprocess": p.ListProcessor},
    {"name": "EcArguments", "symbols": ["EcArguments$macrocall$1"]},
    {"name": "EcArgument", "symbols": ["Expr"]},
    {"name": "EcArgument", "symbols": ["Identifier", "_", {"literal":":"}, "_", "Expr"]},
    {"name": "Stmt", "symbols": ["ExprCall"]},
    {"name": "Atom", "symbols": ["ExprCall"]},
    {"name": "ExprConstruct$ebnf$1", "symbols": ["CompileTime"], "postprocess": id},
    {"name": "ExprConstruct$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "ExprConstruct", "symbols": ["EnTarget", "ExprConstruct$ebnf$1", "EnArguments"]},
    {"name": "EnTarget", "symbols": ["Atom"]},
    {"name": "EnArguments$macrocall$2", "symbols": [{"literal":"{"}]},
    {"name": "EnArguments$macrocall$3", "symbols": ["_"]},
    {"name": "EnArguments$macrocall$4", "symbols": ["EcArgument"]},
    {"name": "EnArguments$macrocall$5", "symbols": ["COMMA"]},
    {"name": "EnArguments$macrocall$6", "symbols": [{"literal":"}"}]},
    {"name": "EnArguments$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": []},
    {"name": "EnArguments$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1", "symbols": ["EnArguments$macrocall$5", "EnArguments$macrocall$4"]},
    {"name": "EnArguments$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": ["EnArguments$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "EnArguments$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "EnArguments$macrocall$1$ebnf$1$subexpression$1", "symbols": ["EnArguments$macrocall$4", "EnArguments$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "EnArguments$macrocall$3"]},
    {"name": "EnArguments$macrocall$1$ebnf$1", "symbols": ["EnArguments$macrocall$1$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "EnArguments$macrocall$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "EnArguments$macrocall$1", "symbols": ["EnArguments$macrocall$2", "EnArguments$macrocall$3", "EnArguments$macrocall$1$ebnf$1", "EnArguments$macrocall$6"], "postprocess": p.ListProcessor},
    {"name": "EnArguments", "symbols": ["EnArguments$macrocall$1"]},
    {"name": "EnArgument", "symbols": ["Expr"]},
    {"name": "EnArgument", "symbols": ["Identifier", "_", {"literal":":"}, "_", "Expr"]},
    {"name": "Atom", "symbols": ["ExprConstruct"]},
    {"name": "ExprIf", "symbols": ["EiKeyword", "EiCondition", {"literal":"?"}, "EiTrue", {"literal":":"}, "EiFalse"]},
    {"name": "EiKeyword$ebnf$1", "symbols": ["CompileTime"], "postprocess": id},
    {"name": "EiKeyword$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "EiKeyword", "symbols": [{"literal":"if"}, "EiKeyword$ebnf$1", "__"]},
    {"name": "EiCondition", "symbols": ["Atom", "N__"]},
    {"name": "EiTrue", "symbols": ["__", "Atom", "N__"]},
    {"name": "EiFalse", "symbols": ["__", "Atom"]},
    {"name": "ExprIndexBracket", "symbols": ["EbTarget", "EbIndex"]},
    {"name": "EbTarget", "symbols": ["Atom"]},
    {"name": "EbIndex$macrocall$2", "symbols": [{"literal":"["}]},
    {"name": "EbIndex$macrocall$3", "symbols": ["_"]},
    {"name": "EbIndex$macrocall$4", "symbols": ["Expr"]},
    {"name": "EbIndex$macrocall$5", "symbols": ["COMMA"]},
    {"name": "EbIndex$macrocall$6", "symbols": [{"literal":"]"}]},
    {"name": "EbIndex$macrocall$1$subexpression$1$ebnf$1", "symbols": []},
    {"name": "EbIndex$macrocall$1$subexpression$1$ebnf$1$subexpression$1", "symbols": ["EbIndex$macrocall$5", "EbIndex$macrocall$4"]},
    {"name": "EbIndex$macrocall$1$subexpression$1$ebnf$1", "symbols": ["EbIndex$macrocall$1$subexpression$1$ebnf$1", "EbIndex$macrocall$1$subexpression$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "EbIndex$macrocall$1$subexpression$1", "symbols": ["EbIndex$macrocall$4", "EbIndex$macrocall$1$subexpression$1$ebnf$1", "EbIndex$macrocall$3"]},
    {"name": "EbIndex$macrocall$1", "symbols": ["EbIndex$macrocall$2", "EbIndex$macrocall$3", "EbIndex$macrocall$1$subexpression$1", "EbIndex$macrocall$6"], "postprocess": p.ListProcessor},
    {"name": "EbIndex", "symbols": ["EbIndex$macrocall$1"]},
    {"name": "Atom", "symbols": ["ExprIndexBracket"]},
    {"name": "ExprIndexDot", "symbols": ["EdTarget", "EdOperator", "EdName"]},
    {"name": "EdTarget", "symbols": ["Atom"]},
    {"name": "EdOperator", "symbols": [{"literal":"."}]},
    {"name": "EdOperator", "symbols": [{"literal":"."}, "NL"]},
    {"name": "EdOperator", "symbols": ["NL", {"literal":"."}]},
    {"name": "EdName", "symbols": ["Identifier"]},
    {"name": "Atom", "symbols": ["ExprIndexDot"]},
    {"name": "ExprMacroCall$ebnf$1", "symbols": ["EmArgument"], "postprocess": id},
    {"name": "ExprMacroCall$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "ExprMacroCall", "symbols": ["EmTarget", "CompileTime", "ExprMacroCall$ebnf$1"]},
    {"name": "EmTarget", "symbols": ["Atom"]},
    {"name": "EmArgument", "symbols": ["__", "Expr"]},
    {"name": "Stmt", "symbols": ["ExprMacroCall"]},
    {"name": "ExprBinary", "symbols": ["ExprMacroCall"]},
    {"name": "StmtAssign", "symbols": ["SaTarget", "SaOperator", "SaValue"]},
    {"name": "SaTarget", "symbols": ["Identifier"]},
    {"name": "SaOperator", "symbols": ["_", "OperatorSpaced", "_"]},
    {"name": "SaValue", "symbols": ["Expr"]},
    {"name": "Stmt", "symbols": ["StmtAssign"]},
    {"name": "StmtForEach$ebnf$1", "symbols": ["CompileTime"], "postprocess": id},
    {"name": "StmtForEach$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "StmtForEach", "symbols": ["SfKeyword", "StmtForEach$ebnf$1", "SfCondition", "SfBody"]},
    {"name": "SfKeyword", "symbols": [{"literal":"for"}]},
    {"name": "SfCondition", "symbols": ["_", {"literal":"("}, "_", "Identifier", "__", {"literal":"in"}, "__", "Expr", "_", {"literal":")"}, "N_"]},
    {"name": "SfBody$macrocall$2", "symbols": ["Stmt"]},
    {"name": "SfBody$macrocall$1$macrocall$2", "symbols": [{"literal":"{"}]},
    {"name": "SfBody$macrocall$1$macrocall$3$ebnf$1", "symbols": ["NL"], "postprocess": id},
    {"name": "SfBody$macrocall$1$macrocall$3$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "SfBody$macrocall$1$macrocall$3", "symbols": ["SfBody$macrocall$1$macrocall$3$ebnf$1"]},
    {"name": "SfBody$macrocall$1$macrocall$4", "symbols": ["SfBody$macrocall$2"]},
    {"name": "SfBody$macrocall$1$macrocall$5", "symbols": ["StmtSep"]},
    {"name": "SfBody$macrocall$1$macrocall$6", "symbols": [{"literal":"}"}]},
    {"name": "SfBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": []},
    {"name": "SfBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1", "symbols": ["SfBody$macrocall$1$macrocall$5", "SfBody$macrocall$1$macrocall$4"]},
    {"name": "SfBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": ["SfBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "SfBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "SfBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1", "symbols": ["SfBody$macrocall$1$macrocall$4", "SfBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "SfBody$macrocall$1$macrocall$3"]},
    {"name": "SfBody$macrocall$1$macrocall$1$ebnf$1", "symbols": ["SfBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "SfBody$macrocall$1$macrocall$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "SfBody$macrocall$1$macrocall$1", "symbols": ["SfBody$macrocall$1$macrocall$2", "SfBody$macrocall$1$macrocall$3", "SfBody$macrocall$1$macrocall$1$ebnf$1", "SfBody$macrocall$1$macrocall$6"], "postprocess": p.ListProcessor},
    {"name": "SfBody$macrocall$1", "symbols": ["SfBody$macrocall$1$macrocall$1"]},
    {"name": "SfBody", "symbols": ["SfBody$macrocall$1"]},
    {"name": "Stmt", "symbols": ["StmtForEach"]},
    {"name": "StmtIf$ebnf$1", "symbols": []},
    {"name": "StmtIf$ebnf$1", "symbols": ["StmtIf$ebnf$1", "SiElif"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "StmtIf$ebnf$2", "symbols": ["SiElse"], "postprocess": id},
    {"name": "StmtIf$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "StmtIf", "symbols": ["SiKeyword", "SiCondition", "SiBody", "StmtIf$ebnf$1", "StmtIf$ebnf$2"]},
    {"name": "SiKeyword$ebnf$1", "symbols": ["CompileTime"], "postprocess": id},
    {"name": "SiKeyword$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "SiKeyword", "symbols": [{"literal":"if"}, "SiKeyword$ebnf$1", "N_"]},
    {"name": "SiElifKeyword", "symbols": ["_", {"literal":"else"}, "__", {"literal":"if"}, "N_"]},
    {"name": "SiElseKeyword", "symbols": ["_", {"literal":"else"}, "N_"]},
    {"name": "SiCondition", "symbols": [{"literal":"("}, "_", "Expr", "_", {"literal":")"}, "N_"]},
    {"name": "SiBody$macrocall$2", "symbols": ["Stmt"]},
    {"name": "SiBody$macrocall$1$macrocall$2", "symbols": [{"literal":"{"}]},
    {"name": "SiBody$macrocall$1$macrocall$3$ebnf$1", "symbols": ["NL"], "postprocess": id},
    {"name": "SiBody$macrocall$1$macrocall$3$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "SiBody$macrocall$1$macrocall$3", "symbols": ["SiBody$macrocall$1$macrocall$3$ebnf$1"]},
    {"name": "SiBody$macrocall$1$macrocall$4", "symbols": ["SiBody$macrocall$2"]},
    {"name": "SiBody$macrocall$1$macrocall$5", "symbols": ["StmtSep"]},
    {"name": "SiBody$macrocall$1$macrocall$6", "symbols": [{"literal":"}"}]},
    {"name": "SiBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": []},
    {"name": "SiBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1", "symbols": ["SiBody$macrocall$1$macrocall$5", "SiBody$macrocall$1$macrocall$4"]},
    {"name": "SiBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": ["SiBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "SiBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "SiBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1", "symbols": ["SiBody$macrocall$1$macrocall$4", "SiBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "SiBody$macrocall$1$macrocall$3"]},
    {"name": "SiBody$macrocall$1$macrocall$1$ebnf$1", "symbols": ["SiBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "SiBody$macrocall$1$macrocall$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "SiBody$macrocall$1$macrocall$1", "symbols": ["SiBody$macrocall$1$macrocall$2", "SiBody$macrocall$1$macrocall$3", "SiBody$macrocall$1$macrocall$1$ebnf$1", "SiBody$macrocall$1$macrocall$6"], "postprocess": p.ListProcessor},
    {"name": "SiBody$macrocall$1", "symbols": ["SiBody$macrocall$1$macrocall$1"]},
    {"name": "SiBody", "symbols": ["SiBody$macrocall$1"]},
    {"name": "SiElif", "symbols": ["SiElifKeyword", "SiCondition", "SiBody"]},
    {"name": "SiElse", "symbols": ["SiElseKeyword", "SiCondition", "SiBody"]},
    {"name": "Stmt", "symbols": ["StmtIf"]},
    {"name": "StmtMatch", "symbols": ["SmKeyword", "SmValue", "SmCases"]},
    {"name": "SmKeyword$ebnf$1", "symbols": ["CompileTime"], "postprocess": id},
    {"name": "SmKeyword$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "SmKeyword", "symbols": [{"literal":"match"}, "SmKeyword$ebnf$1", "N_"]},
    {"name": "SmValue", "symbols": [{"literal":"("}, "_", "Expr", "_", {"literal":")"}, "N_"]},
    {"name": "SmCases$macrocall$2", "symbols": ["SmCase"]},
    {"name": "SmCases$macrocall$1$macrocall$2", "symbols": [{"literal":"{"}]},
    {"name": "SmCases$macrocall$1$macrocall$3$ebnf$1", "symbols": ["NL"], "postprocess": id},
    {"name": "SmCases$macrocall$1$macrocall$3$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "SmCases$macrocall$1$macrocall$3", "symbols": ["SmCases$macrocall$1$macrocall$3$ebnf$1"]},
    {"name": "SmCases$macrocall$1$macrocall$4", "symbols": ["SmCases$macrocall$2"]},
    {"name": "SmCases$macrocall$1$macrocall$5", "symbols": ["StmtSep"]},
    {"name": "SmCases$macrocall$1$macrocall$6", "symbols": [{"literal":"}"}]},
    {"name": "SmCases$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": []},
    {"name": "SmCases$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1", "symbols": ["SmCases$macrocall$1$macrocall$5", "SmCases$macrocall$1$macrocall$4"]},
    {"name": "SmCases$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": ["SmCases$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "SmCases$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "SmCases$macrocall$1$macrocall$1$ebnf$1$subexpression$1", "symbols": ["SmCases$macrocall$1$macrocall$4", "SmCases$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "SmCases$macrocall$1$macrocall$3"]},
    {"name": "SmCases$macrocall$1$macrocall$1$ebnf$1", "symbols": ["SmCases$macrocall$1$macrocall$1$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "SmCases$macrocall$1$macrocall$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "SmCases$macrocall$1$macrocall$1", "symbols": ["SmCases$macrocall$1$macrocall$2", "SmCases$macrocall$1$macrocall$3", "SmCases$macrocall$1$macrocall$1$ebnf$1", "SmCases$macrocall$1$macrocall$6"], "postprocess": p.ListProcessor},
    {"name": "SmCases$macrocall$1", "symbols": ["SmCases$macrocall$1$macrocall$1"]},
    {"name": "SmCases", "symbols": ["SmCases$macrocall$1"]},
    {"name": "SmCase", "symbols": [{"literal":"case"}, "__", "Pattern", "_", {"literal":":"}, "N_", "SmBody"]},
    {"name": "SmBody$macrocall$2", "symbols": ["Stmt"]},
    {"name": "SmBody$macrocall$1$macrocall$2", "symbols": [{"literal":"{"}]},
    {"name": "SmBody$macrocall$1$macrocall$3$ebnf$1", "symbols": ["NL"], "postprocess": id},
    {"name": "SmBody$macrocall$1$macrocall$3$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "SmBody$macrocall$1$macrocall$3", "symbols": ["SmBody$macrocall$1$macrocall$3$ebnf$1"]},
    {"name": "SmBody$macrocall$1$macrocall$4", "symbols": ["SmBody$macrocall$2"]},
    {"name": "SmBody$macrocall$1$macrocall$5", "symbols": ["StmtSep"]},
    {"name": "SmBody$macrocall$1$macrocall$6", "symbols": [{"literal":"}"}]},
    {"name": "SmBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": []},
    {"name": "SmBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1", "symbols": ["SmBody$macrocall$1$macrocall$5", "SmBody$macrocall$1$macrocall$4"]},
    {"name": "SmBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": ["SmBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "SmBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "SmBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1", "symbols": ["SmBody$macrocall$1$macrocall$4", "SmBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "SmBody$macrocall$1$macrocall$3"]},
    {"name": "SmBody$macrocall$1$macrocall$1$ebnf$1", "symbols": ["SmBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "SmBody$macrocall$1$macrocall$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "SmBody$macrocall$1$macrocall$1", "symbols": ["SmBody$macrocall$1$macrocall$2", "SmBody$macrocall$1$macrocall$3", "SmBody$macrocall$1$macrocall$1$ebnf$1", "SmBody$macrocall$1$macrocall$6"], "postprocess": p.ListProcessor},
    {"name": "SmBody$macrocall$1", "symbols": ["SmBody$macrocall$1$macrocall$1"]},
    {"name": "SmBody", "symbols": ["SmBody$macrocall$1"]},
    {"name": "Stmt", "symbols": ["StmtMatch"]},
    {"name": "StmtReturn$ebnf$1", "symbols": ["SrValue"], "postprocess": id},
    {"name": "StmtReturn$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "StmtReturn", "symbols": ["SrKeyword", "StmtReturn$ebnf$1"]},
    {"name": "SrKeyword", "symbols": [{"literal":"return"}]},
    {"name": "SrValue", "symbols": ["__", "Expr"]},
    {"name": "Stmt", "symbols": ["StmtReturn"]},
    {"name": "StmtWhile$ebnf$1", "symbols": ["CompileTime"], "postprocess": id},
    {"name": "StmtWhile$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "StmtWhile", "symbols": ["SwKeyword", "StmtWhile$ebnf$1", "SwCondition", "SwBody"]},
    {"name": "SwKeyword", "symbols": [{"literal":"while"}]},
    {"name": "SwCondition", "symbols": ["_", {"literal":"("}, "_", "Expr", "_", {"literal":")"}, "N_"]},
    {"name": "SwBody$macrocall$2", "symbols": ["Stmt"]},
    {"name": "SwBody$macrocall$1$macrocall$2", "symbols": [{"literal":"{"}]},
    {"name": "SwBody$macrocall$1$macrocall$3$ebnf$1", "symbols": ["NL"], "postprocess": id},
    {"name": "SwBody$macrocall$1$macrocall$3$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "SwBody$macrocall$1$macrocall$3", "symbols": ["SwBody$macrocall$1$macrocall$3$ebnf$1"]},
    {"name": "SwBody$macrocall$1$macrocall$4", "symbols": ["SwBody$macrocall$2"]},
    {"name": "SwBody$macrocall$1$macrocall$5", "symbols": ["StmtSep"]},
    {"name": "SwBody$macrocall$1$macrocall$6", "symbols": [{"literal":"}"}]},
    {"name": "SwBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": []},
    {"name": "SwBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1", "symbols": ["SwBody$macrocall$1$macrocall$5", "SwBody$macrocall$1$macrocall$4"]},
    {"name": "SwBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "symbols": ["SwBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "SwBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "SwBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1", "symbols": ["SwBody$macrocall$1$macrocall$4", "SwBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1$ebnf$1", "SwBody$macrocall$1$macrocall$3"]},
    {"name": "SwBody$macrocall$1$macrocall$1$ebnf$1", "symbols": ["SwBody$macrocall$1$macrocall$1$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "SwBody$macrocall$1$macrocall$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "SwBody$macrocall$1$macrocall$1", "symbols": ["SwBody$macrocall$1$macrocall$2", "SwBody$macrocall$1$macrocall$3", "SwBody$macrocall$1$macrocall$1$ebnf$1", "SwBody$macrocall$1$macrocall$6"], "postprocess": p.ListProcessor},
    {"name": "SwBody$macrocall$1", "symbols": ["SwBody$macrocall$1$macrocall$1"]},
    {"name": "SwBody", "symbols": ["SwBody$macrocall$1"]},
    {"name": "Stmt", "symbols": ["StmtWhile"]},
    {"name": "Type", "symbols": ["Expr"]},
    {"name": "Atom", "symbols": ["Identifier", "GenericArguments"]},
    {"name": "GenericArguments$macrocall$2", "symbols": [{"literal":"<"}]},
    {"name": "GenericArguments$macrocall$3", "symbols": ["_"]},
    {"name": "GenericArguments$macrocall$4", "symbols": ["GenericArgument"]},
    {"name": "GenericArguments$macrocall$5", "symbols": ["COMMA"]},
    {"name": "GenericArguments$macrocall$6", "symbols": [{"literal":">"}]},
    {"name": "GenericArguments$macrocall$1$subexpression$1$ebnf$1", "symbols": []},
    {"name": "GenericArguments$macrocall$1$subexpression$1$ebnf$1$subexpression$1", "symbols": ["GenericArguments$macrocall$5", "GenericArguments$macrocall$4"]},
    {"name": "GenericArguments$macrocall$1$subexpression$1$ebnf$1", "symbols": ["GenericArguments$macrocall$1$subexpression$1$ebnf$1", "GenericArguments$macrocall$1$subexpression$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "GenericArguments$macrocall$1$subexpression$1", "symbols": ["GenericArguments$macrocall$4", "GenericArguments$macrocall$1$subexpression$1$ebnf$1", "GenericArguments$macrocall$3"]},
    {"name": "GenericArguments$macrocall$1", "symbols": ["GenericArguments$macrocall$2", "GenericArguments$macrocall$3", "GenericArguments$macrocall$1$subexpression$1", "GenericArguments$macrocall$6"], "postprocess": p.ListProcessor},
    {"name": "GenericArguments", "symbols": ["GenericArguments$macrocall$1"]},
    {"name": "GenericArgument", "symbols": ["Type"]},
    {"name": "GenericArgument", "symbols": ["Identifier", "_", {"literal":":"}, "_", "Type"]},
    {"name": "Pattern", "symbols": ["PdCrlMembers"]},
    {"name": "Pattern", "symbols": ["Identifier", "PdCrlMembers"]},
    {"name": "Pattern", "symbols": ["PdSqrMembers"]},
    {"name": "Pattern$ebnf$1", "symbols": ["PdKeyword"], "postprocess": id},
    {"name": "Pattern$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "Pattern", "symbols": ["Pattern$ebnf$1", "Identifier"]},
    {"name": "PdCrlMembers$macrocall$2", "symbols": [{"literal":"{"}]},
    {"name": "PdCrlMembers$macrocall$3", "symbols": ["_"]},
    {"name": "PdCrlMembers$macrocall$4", "symbols": ["PdMember"]},
    {"name": "PdCrlMembers$macrocall$5", "symbols": ["COMMA"]},
    {"name": "PdCrlMembers$macrocall$6", "symbols": [{"literal":"}"}]},
    {"name": "PdCrlMembers$macrocall$1$subexpression$1$ebnf$1", "symbols": []},
    {"name": "PdCrlMembers$macrocall$1$subexpression$1$ebnf$1$subexpression$1", "symbols": ["PdCrlMembers$macrocall$5", "PdCrlMembers$macrocall$4"]},
    {"name": "PdCrlMembers$macrocall$1$subexpression$1$ebnf$1", "symbols": ["PdCrlMembers$macrocall$1$subexpression$1$ebnf$1", "PdCrlMembers$macrocall$1$subexpression$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "PdCrlMembers$macrocall$1$subexpression$1", "symbols": ["PdCrlMembers$macrocall$4", "PdCrlMembers$macrocall$1$subexpression$1$ebnf$1", "PdCrlMembers$macrocall$3"]},
    {"name": "PdCrlMembers$macrocall$1", "symbols": ["PdCrlMembers$macrocall$2", "PdCrlMembers$macrocall$3", "PdCrlMembers$macrocall$1$subexpression$1", "PdCrlMembers$macrocall$6"], "postprocess": p.ListProcessor},
    {"name": "PdCrlMembers", "symbols": ["PdCrlMembers$macrocall$1"]},
    {"name": "PdSqrMembers$macrocall$2", "symbols": [{"literal":"["}]},
    {"name": "PdSqrMembers$macrocall$3", "symbols": ["_"]},
    {"name": "PdSqrMembers$macrocall$4", "symbols": ["PdMember"]},
    {"name": "PdSqrMembers$macrocall$5", "symbols": ["COMMA"]},
    {"name": "PdSqrMembers$macrocall$6", "symbols": [{"literal":"]"}]},
    {"name": "PdSqrMembers$macrocall$1$subexpression$1$ebnf$1", "symbols": []},
    {"name": "PdSqrMembers$macrocall$1$subexpression$1$ebnf$1$subexpression$1", "symbols": ["PdSqrMembers$macrocall$5", "PdSqrMembers$macrocall$4"]},
    {"name": "PdSqrMembers$macrocall$1$subexpression$1$ebnf$1", "symbols": ["PdSqrMembers$macrocall$1$subexpression$1$ebnf$1", "PdSqrMembers$macrocall$1$subexpression$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "PdSqrMembers$macrocall$1$subexpression$1", "symbols": ["PdSqrMembers$macrocall$4", "PdSqrMembers$macrocall$1$subexpression$1$ebnf$1", "PdSqrMembers$macrocall$3"]},
    {"name": "PdSqrMembers$macrocall$1", "symbols": ["PdSqrMembers$macrocall$2", "PdSqrMembers$macrocall$3", "PdSqrMembers$macrocall$1$subexpression$1", "PdSqrMembers$macrocall$6"], "postprocess": p.ListProcessor},
    {"name": "PdSqrMembers", "symbols": ["PdSqrMembers$macrocall$1"]},
    {"name": "PdMember", "symbols": ["Pattern"]},
    {"name": "PdMember", "symbols": ["Identifier", "PdRebind", "Pattern"]},
    {"name": "PdKeyword", "symbols": [{"literal":"own"}, "__"]},
    {"name": "PdKeyword", "symbols": [{"literal":"mut"}, "__"]},
    {"name": "PdKeyword", "symbols": [{"literal":"val"}, "__"]},
    {"name": "PdRebind", "symbols": ["_", {"literal":"="}, {"literal":">"}, "_"]},
    {"name": "Attribute", "symbols": [{"literal":"#"}, "Identifier"]},
    {"name": "CompileTime", "symbols": [{"literal":"!"}]},
    {"name": "Identifier", "symbols": [(lexer.has("identifier") ? {type: "identifier"} : identifier)]},
    {"name": "__", "symbols": [(lexer.has("ws") ? {type: "ws"} : ws)]},
    {"name": "_$ebnf$1", "symbols": [(lexer.has("ws") ? {type: "ws"} : ws)], "postprocess": id},
    {"name": "_$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "_", "symbols": ["_$ebnf$1"]},
    {"name": "N__$ebnf$1$subexpression$1", "symbols": [(lexer.has("ws") ? {type: "ws"} : ws)]},
    {"name": "N__$ebnf$1$subexpression$1", "symbols": [(lexer.has("comment") ? {type: "comment"} : comment)]},
    {"name": "N__$ebnf$1$subexpression$1", "symbols": [(lexer.has("newline") ? {type: "newline"} : newline)]},
    {"name": "N__$ebnf$1", "symbols": ["N__$ebnf$1$subexpression$1"]},
    {"name": "N__$ebnf$1$subexpression$2", "symbols": [(lexer.has("ws") ? {type: "ws"} : ws)]},
    {"name": "N__$ebnf$1$subexpression$2", "symbols": [(lexer.has("comment") ? {type: "comment"} : comment)]},
    {"name": "N__$ebnf$1$subexpression$2", "symbols": [(lexer.has("newline") ? {type: "newline"} : newline)]},
    {"name": "N__$ebnf$1", "symbols": ["N__$ebnf$1", "N__$ebnf$1$subexpression$2"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "N__", "symbols": ["N__$ebnf$1"]},
    {"name": "N_$ebnf$1", "symbols": ["N__"], "postprocess": id},
    {"name": "N_$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "N_", "symbols": ["N_$ebnf$1"]},
    {"name": "NL$ebnf$1$subexpression$1$ebnf$1", "symbols": [(lexer.has("ws") ? {type: "ws"} : ws)], "postprocess": id},
    {"name": "NL$ebnf$1$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "NL$ebnf$1$subexpression$1$ebnf$2", "symbols": [(lexer.has("comment") ? {type: "comment"} : comment)], "postprocess": id},
    {"name": "NL$ebnf$1$subexpression$1$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "NL$ebnf$1$subexpression$1", "symbols": ["NL$ebnf$1$subexpression$1$ebnf$1", "NL$ebnf$1$subexpression$1$ebnf$2", (lexer.has("newline") ? {type: "newline"} : newline)]},
    {"name": "NL$ebnf$1", "symbols": ["NL$ebnf$1$subexpression$1"]},
    {"name": "NL$ebnf$1$subexpression$2$ebnf$1", "symbols": [(lexer.has("ws") ? {type: "ws"} : ws)], "postprocess": id},
    {"name": "NL$ebnf$1$subexpression$2$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "NL$ebnf$1$subexpression$2$ebnf$2", "symbols": [(lexer.has("comment") ? {type: "comment"} : comment)], "postprocess": id},
    {"name": "NL$ebnf$1$subexpression$2$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "NL$ebnf$1$subexpression$2", "symbols": ["NL$ebnf$1$subexpression$2$ebnf$1", "NL$ebnf$1$subexpression$2$ebnf$2", (lexer.has("newline") ? {type: "newline"} : newline)]},
    {"name": "NL$ebnf$1", "symbols": ["NL$ebnf$1", "NL$ebnf$1$subexpression$2"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "NL$ebnf$2", "symbols": [(lexer.has("ws") ? {type: "ws"} : ws)], "postprocess": id},
    {"name": "NL$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "NL", "symbols": ["NL$ebnf$1", "NL$ebnf$2"]},
    {"name": "COMMA", "symbols": ["_", (lexer.has("comma") ? {type: "comma"} : comma), "_"]},
    {"name": "COMMA", "symbols": ["NL"]},
    {"name": "StmtSep", "symbols": ["NL"]},
    {"name": "StmtSep", "symbols": ["_", {"literal":";"}, "_"]}
  ],
  ParserStart: "main",
};

export default grammar;
